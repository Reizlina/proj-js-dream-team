{"mappings":"gfAGoB,IAAI,EAHxBA,EAAA,SAGwBC,aAHxB,IAIMC,EAAUC,SAASC,cAAc,kBACnCC,EAAe,KACfC,EAAa,KAEjB,IAEEA,EAA4B,QAD5BA,EAAaC,aAAaC,QAAQ,UACC,GAAKC,KAAKC,MAAMJ,GACnD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,SAG3C,IAEER,EAAgC,QADhCA,EAAeE,aAAaC,QAAQ,YACG,GAAKC,KAAKC,MAAML,GACvD,MAAOS,GACPF,QAAQD,MAAM,oBAAqBG,EAAMD,SAIvCP,EAAWS,SACbC,EAAYV,GACZJ,EAAQe,UAAYC,EAAWZ,IAIjC,IAAMa,EAAO,CACXC,WAAYjB,SAASC,cAAc,qBACnCiB,SAAUlB,SAASC,cAAc,oBAoBnCe,EAAKC,WAAWE,iBAAiB,SAfC,SAAAC,GAChCA,EAAEC,OAAOC,UAAUC,IAAI,aACvBP,EAAKE,SAASI,UAAUE,OAAO,aAE/B,IAEEtB,EAAgC,QADhCA,EAAeE,aAAaC,QAAQ,YACG,GAAKC,KAAKC,MAAML,GACvD,MAAOuB,GACPhB,QAAQD,MAAM,oBAAqBiB,EAAMf,SAG3CG,EAAYX,GACZH,EAAQe,UAAYC,EAAWb,MA0BjC,SAASW,EAAYa,GACnB,IAAMC,EAASvB,aAAaC,QAAQ,aAC9BuB,EAAWtB,KAAKC,MAAMoB,GAE5B,OADAlB,QAAQoB,IAAIH,GACLA,EAAOI,SAAQ,SAAAC,GACpBA,EAAMC,OAAOF,SAAQ,SAACG,EAAOC,EAAKC,GAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAShB,OAAQwB,GAAK,EACxC,GAAIH,EAAMI,KAAOT,EAASQ,GAAGC,GAAI,CAC/BF,EAAID,GAAON,EAASQ,GAAGE,KACvB,UAKoB,OAAtBP,EAAMQ,YACRR,EAAMQ,YACJ,kYAEFR,EAAMQ,YACJ,mCAAqCR,EAAMQ,YAG3CR,EAAMS,aACRT,EAAMS,aAAeT,EAAMS,aAAaC,MAAM,EAAG,GAEjDV,EAAMS,aAAe,uBAGlBT,EAAMC,OAAOpB,SAChBmB,EAAMC,OAAS,oBAKrB,SAASjB,EAAW2B,GAclB,OAZaA,EACVC,KACC,SAAAC,G,MAAQ,sCACyBC,OADaD,EAAKP,GAAG,6CAEzBQ,OADID,EAAKL,YAAY,0EAG7CM,OAFwBD,EAAKE,eAAe,qDAGjBD,OAD3BD,EAAKZ,OAAO,0CACiCa,OAAlBD,EAAKJ,aAAa,qCAInDO,KAAK,IAnDV/B,EAAKE,SAASC,iBAAiB,SAfC,SAAAC,GAC9BA,EAAEC,OAAOC,UAAUC,IAAI,aACvBP,EAAKC,WAAWK,UAAUE,OAAO,aAEjC,IAEErB,EAA4B,QAD5BA,EAAaC,aAAaC,QAAQ,UACC,GAAKC,KAAKC,MAAMJ,GACnD,MAAO6C,GACPvC,QAAQD,MAAM,oBAAqBwC,EAAMtC,SAG3CG,EAAYV,GACZJ,EAAQe,UAAYC,EAAWZ,M","sources":["src/js/library.js"],"sourcesContent":["import { UnsplashApi } from './themoviedb';\n\n// variables\nconst unsplashApi = new UnsplashApi();\nconst gallery = document.querySelector('.gallery__list');\nlet savedWatched = null;\nlet savedQueue = null;\n\ntry {\n  savedQueue = localStorage.getItem('queue');\n  savedQueue = savedQueue === null ? [] : JSON.parse(savedQueue);\n} catch (error) {\n  console.error('Get state error: ', error.message);\n}\n\ntry {\n  savedWatched = localStorage.getItem('watched');\n  savedWatched = savedWatched === null ? [] : JSON.parse(savedWatched);\n} catch (error) {\n  console.error('Get state error: ', error.message);\n}\n\n// queue first render\nif (savedQueue.length) {\n  changedData(savedQueue);\n  gallery.innerHTML = makeMarkup(savedQueue);\n}\n\n// refs\nconst refs = {\n  btnWatched: document.querySelector('.buttons__watched'),\n  btnQueue: document.querySelector('.buttons__queue'),\n};\n\n// onBtnWatchedClickIsActive\n\nconst onBtnWatchedClickIsActive = e => {\n  e.target.classList.add('is-active');\n  refs.btnQueue.classList.remove('is-active');\n\n  try {\n    savedWatched = localStorage.getItem('watched');\n    savedWatched = savedWatched === null ? [] : JSON.parse(savedWatched);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n\n  changedData(savedWatched);\n  gallery.innerHTML = makeMarkup(savedWatched);\n};\n\nrefs.btnWatched.addEventListener('click', onBtnWatchedClickIsActive);\n\n// onBtnQueueClickIsActive\n\nconst onBtnQueueClickIsActive = e => {\n  e.target.classList.add('is-active');\n  refs.btnWatched.classList.remove('is-active');\n\n  try {\n    savedQueue = localStorage.getItem('queue');\n    savedQueue = savedQueue === null ? [] : JSON.parse(savedQueue);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n\n  changedData(savedQueue);\n  gallery.innerHTML = makeMarkup(savedQueue);\n};\n\nrefs.btnQueue.addEventListener('click', onBtnQueueClickIsActive);\n\n// markup functions\n\nfunction changedData(params) {\n  const getIds = localStorage.getItem('genre_ids');\n  const parseIds = JSON.parse(getIds);\n  console.log(params);\n  return params.forEach(param => {\n    param.genres.forEach((genre, ind, arr) => {\n      for (let i = 0; i < parseIds.length; i += 1) {\n        if (genre.id === parseIds[i].id) {\n          arr[ind] = parseIds[i].name;\n          break;\n        }\n      }\n    });\n\n    if (param.poster_path === null) {\n      param.poster_path =\n        'https://thumbs.dreamstime.com/b/%D1%81%D0%BA%D0%BE%D1%80%D0%BE-%D0%BD%D0%B0-%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%BE%D0%B9-%D0%B4%D0%BE%D1%81%D0%BA%D0%B5-%D0%BF%D0%BE%D1%8F%D0%B2%D0%B8%D1%82%D1%81%D1%8F-%D0%BF%D0%BB%D0%B0%D0%BA%D0%B0%D1%82-retro-%D1%81%D0%B2%D0%B5%D1%82%D1%8F%D1%89%D0%B8%D0%B9%D1%81%D1%8F-%D0%BD%D0%B5%D0%BE%D0%BD-159994270.jpg';\n    } else {\n      param.poster_path =\n        'https://image.tmdb.org/t/p/w500/' + param.poster_path;\n    }\n\n    if (param.release_date) {\n      param.release_date = param.release_date.slice(0, 4);\n    } else {\n      param.release_date = 'release year unknown';\n    }\n\n    if (!param.genres.length) {\n      param.genres = 'genre unknown';\n    }\n  });\n}\n\nfunction makeMarkup(data) {\n  // console.log(data);\n  let markup = data\n    .map(\n      data => `<li class=\"gallery__item\" data-id=\"${data.id}\">\n      <img class=\"gallery__img\" src=\"${data.poster_path}\" alt=\"movie image\" height=\"455px\">\n      <h3 class=\"gallery__title\">${data.original_title}</h3>\n      <p class=\"gallery__text\">\n         ${data.genres}\n        <span class=\"gallery__year\">${data.release_date}</span>\n      </p>\n    </li>`\n    )\n    .join('');\n  return markup;\n}\n"],"names":["parcelRequire","UnsplashApi","$93effc6fc56091ad$var$gallery","document","querySelector","$93effc6fc56091ad$var$savedWatched","$93effc6fc56091ad$var$savedQueue","localStorage","getItem","JSON","parse","error","console","message","error1","length","$93effc6fc56091ad$var$changedData","innerHTML","$93effc6fc56091ad$var$makeMarkup","$93effc6fc56091ad$var$refs","btnWatched","btnQueue","addEventListener","e","target","classList","add","remove","error2","params","getIds","parseIds","log","forEach","param","genres","genre","ind","arr","i","id","name","poster_path","release_date","slice","data1","map","data","concat","original_title","join","error3"],"version":3,"file":"library.03eb2865.js.map"}